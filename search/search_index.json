{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Automate your document-centric business processes","text":"<p>TCG Process provides end-to-end orchestration, leveraging AI and intelligent document processing technologies to automate workflows and optimize operations. Boost agility. Maximize productivity. Supercharge efficiency.</p> <p>Schedule a demo Subscribe to our newsletter</p> <p></p>"},{"location":"Activity%20Routing/","title":"Activity Routing","text":"<p>DocProStar processes are made up of activities connected by routes. These routes typically connect 2 activities to each other, but can also connect an activity to more than one destination using gateways and conditions. </p>"},{"location":"Activity%20Routing/#route-properties","title":"Route Properties","text":"<p>Routes have up to three properties in the General section.</p> <ul> <li> <p>Label</p> </li> <li> <p>Expiration Date Factor</p> </li> </ul> <p>This setting allows to influence the expiration date. A factor between 0 and 1 sets the expiration date closer to the creation date of the work item. A factor above 1 extends the expiration date to be further in the future. </p> <p>[!example] Take a creation datetime of 10:00 and expiration date of 20:00, on the same day. A value of 0.3 changes the expiration to 13:00: 10:00 + (20:00 - 10:00) * 0.3 == 13:00. A value of 1.3 changes the expiration to 23:00: 10:00 + (20:00 - 10:00) * 1.3 == 23:00.</p> <ul> <li>Condition </li> </ul> <p>Only on conditional routes after a Gateway. Defines under what condition that route is taken.</p>"},{"location":"Activity%20Routing/#gateways","title":"Gateways","text":"<p>A gateway is a connection from one activity to two or more destination activities. To visually highlight conditional routes those are displayed showing a route into a rhombus from there several routes are connected to several activities.</p> <p>The default route defines the connection that is taken if none of the other connections matches the condition. If a route connects two activities only, this one-to-one route is always considered as the default route. If an activity is connected to more than one destination activity this route is a gateway. For each outgoing connection you need to configure a condition in the route properties of the settings panel. If the conditions meets for a work item this route is used for the process flow. If a work item does not meet any of the configured conditions, the process uses the default route. A default route is displayed with a little stroke near the gateway. Connections that have not configured the conditions on the Process tab are marked with\u00a0. A route that has a condition configured is displayed in black.</p> <p>To set the condition for a route, select the outgoing route and enter a condition for the\u00a0Condition\u00a0text field in the General area of the settings panel.</p> <p>![[Pasted image 20241003183858.png]]</p>"},{"location":"Activity%20Routing/#conditional-activities","title":"Conditional Activities","text":"<p>When an activity is connected to more than one destination activity, you need to specify conditions when a certain route to take. For example, after documents are imported into the system, image files are processed by the \u201cimage classifier\u201d whereas text documents are processed by the \u201ccontent classifier\u201d. To specify the condition, select the route and enter a condition into the\u00a0Condition\u00a0field that is provided in the General area on the\u00a0Route properties\u00a0tab in the settings panel.</p> <p>Besides the conditions for routes, you can also specify conditions for an activity instance such as when you want to process all imported documents with a \u201ccontent classifier\u201d that determines different document types as result of the document's content. </p> <p>For loaded image documents, you have to perform text recognition (OCR) prior to analyzing the content. That means that an activity that performs OCR does not need to process text documents but image documents only. So, you can specify a condition for this activity to process work items that reference image documents only. You enter the condition for an activity by selecting the activity in the process diagram and entering the condition into the\u00a0Activity filter\u00a0field within the\u00a0x2 conditions\u00a0area on the\u00a0Process\u00a0tab in the settings panel.</p> <p>![[Pasted image 20241003183937.png]]</p> <p>To evaluate the routing conditions the system converts the expression into an abstract syntax tree. In addition, it no longer performs type castings so that expressions that try to evaluate \"55\" == 55 now fail.</p> <p>How you specify a condition depends on the field type. For example, for a string field you have to use quotes in the equation. For more information about text, typed, and captured values, see the\u00a0[[Field Types, Values and Indexed Fields]]\u00a0and [[Field Evaluation Methods]] articles.</p>"},{"location":"Activity%20Types/","title":"Activity Types","text":"<p>DocProStar processes consist of activities [[Activity routing|connected by routes]]. Activities can be classified in one of several types depending on how they are started, and are classified as such in the Process Modeler's \"Activities\" mode.</p> <p>A process consists of activities connected with routes. Depending on how an activity is started, activities are listed within one of the following areas within the main panel.</p>"},{"location":"Activity%20Types/#time-driven-activity","title":"Time-driven activity","text":"<p>Time-driven activities are started by a timer, and perform their implementation only when a timer notifies it for execution. </p> <p>For more details on how to set timers for such activities, see the [[Timer Settings]] article.</p>"},{"location":"Activity%20Types/#document-driven-activity","title":"Document-driven activity","text":"<p>A document-driven activity picks up the work items when they become available such as for example when a specified folder contains one or more document files. The activity executes the implementation and moves the work item in the process flow.</p>"},{"location":"Activity%20Types/#event-driven-activities","title":"Event-driven activities","text":"<p>Event-driven activities are used to feed the platform from an external system to perform document processing.</p>"},{"location":"Activity%20Types/#external-activities","title":"External activities","text":"<p>An external activity is a third-party implementation that uses the application programming interface to access and process work items in an external desktop or Web client application, such as Document Review and Batch Review.</p>"},{"location":"Activity%20Types/#system","title":"System","text":"<p>These are special activities categorized by their function and other functionality are activities, such as the Process Starter. The process starter activity is used to trigger sub-processes.</p>"},{"location":"Activity%20Types/#system-agents","title":"System Agents","text":"<p>The System Agents area provides a list of available system agents. Unlike activities that are added at a specific position in your process flow, you can add a system agent to a process to monitor the process for work items in general. For example, the Deletion System Agent removes all work items from the process that have been marked for deletion and have reached their expiration date. </p> <p>Other system agents allow to monitor one or more activities for work items that are in Error state, to either move them to a different activity or to set their status back to Ready, for example to restart processing after a database lookup ran into an time out</p>"},{"location":"Custom%20Value%20Evaluation%20Methods/","title":"Custom Value Evaluation","text":"<p>There are several evaluation methods for custom value. A custom value is a user-defined key-value pair that an activity can create or set a value for. A custom value contains string values only.</p>"},{"location":"Custom%20Value%20Evaluation%20Methods/#custom-value-check","title":"Custom value check","text":"<p>You can use a custom value check to calculate whether the value of a specified custom value is equal <code>(==)</code> or not equal <code>(!=)</code> to a defined value. Due to the behavior of JS we highly recommend not to use less than <code>(&lt;)</code>, less or equal <code>(&lt;=)</code>, greater than <code>(&gt;)</code> or greater or equal <code>(&gt;=)</code> than for custom value checks.</p> <p>The following condition is valid, when the custom value \u201cImportSource\u201d for a work item is equal to \u201cC:\\ImagesImport\u201d.</p> <p><code>customValue[ImportSource] == \"C:\\Images\\Import\"</code></p>"},{"location":"Custom%20Value%20Evaluation%20Methods/#custom-value-matches-a-regular-expression","title":"Custom value matches a regular expression","text":"<p>For custom values, you can also use a check against a regular expression. The evaluation returns true, if the value of a specified custom value matches a regular expression. In this case, the value must start with \u201cDE\u201d followed by one or several digits.</p> <p><code>customValue[MyTestField] Matches \"(^DE\\d*)\"</code></p>"},{"location":"Custom%20Value%20Evaluation%20Methods/#custom-value-exists","title":"Custom value exists","text":"<p>Checks whether a specified custom value exists. If the custom value for the configured name is available for the root document, the evaluation returns true.</p> <p><code>customValueExists[MyCustomValueKey]</code></p>"},{"location":"Custom%20Value%20Evaluation%20Methods/#custom-value-starts-with","title":"Custom value starts with","text":"<p>Checks whether the value of a specified custom value starts with a specified data and then returns true.</p> <p><code>customValue[ImportSource] StartsWith \"C:\\Images\"</code></p>"},{"location":"Custom%20Value%20Evaluation%20Methods/#custom-value-ends-with","title":"Custom value ends with","text":"<p>Checks whether the value of a specified custom value ends with a specified data and then returns true.</p> <p><code>customValue[ImportSource] EndsWith \"jpg\"</code></p>"},{"location":"Custom%20Value%20Evaluation%20Methods/#custom-value-contains","title":"Custom value contains","text":"<p>Checks whether the value of a specified custom value contains specified data and then returns true.</p> <p><code>customValue[ImportSource] Contains \"\\Images\\Tif\"</code></p>"},{"location":"DocProStar/","title":"DocProStar: Intelligent automation for the enterprise","text":"<p>Intelligent automation and process management are central to our product philosophy, delivering unparalleled levels of control, efficiency, and customer satisfaction by transforming the way our customers collect, understand and act on the content entering their organization.</p> <p></p>"},{"location":"Field%20Evaluation%20Methods/","title":"Field Evaluation","text":"<p>The field value check allows you to check whether the value of the specified field is equal <code>(==)</code> or not equal <code>(!=)</code> to a defined value. String comparisons are case insensitive so that\u00a0<code>\"value\" == \"VALUE\"</code>\u00a0is\u00a0true. For case sensitive comparisons, use 3 equal signs <code>(===)</code>.</p> <p>You can also check if a field value is less than <code>(&lt;)</code>, less or equal <code>(&lt;=)</code>, greater than <code>(&gt;)</code> or greater or equal <code>(&gt;=)</code> than a certain value. However, we highly recommend to consider the field's field type for any field check as else the evaluation whether a field is greater than 100 using\u00a0<code>field[myField] &gt; \"100,00\"</code>\u00a0may not return the expected result.</p> <p>Warning</p> <p>If an expression uses calculations that the system can't perform, for example, because the typed amount value does not exist, then it can't\u00a0properly evaluate <code>[amount] *1.19 &gt; 20</code>\u00a0and fails! Note that the platform does not cast text values to typed values nor applies further fallbacks. Therefore, we recommend to use\u00a0simple\u00a0and easy to read expressions. In case of an unexpected routing decision, you can use the work item audit to get more information about the evaluation result.</p> <p>When you add a field to a document type you specify the field's type, such as, string, date, or decimal. Each field in Primus has a text and a typed value. A field that has no field value, is\u00a0null, for both the text and the typed value. For conditions, the platform handles a field value that is null the same way as an\u00a0empty\u00a0field value. Most activities set the field's text value only so that the corresponding typed value is\u00a0null. It may also happen that text and typed value have different values for example, when the formatting fails. For example, if the field's text value is \u201c34,B5\u201d for a decimal field, the typed value is not set (null) as a decimal field cannot contain letters.</p> <p>The platform provides the generic field value check, additional value checks on the text, typed, and captured value of a field and checks on Date as well as on Boolean fields. The following field value checks are provided.</p>"},{"location":"Field%20Evaluation%20Methods/#generic-field-value-check","title":"Generic field value check","text":"<p>For the generic field value check, the platform uses the field's text value for evaluating the condition. That means it is similar to using the field text value check so that\u00a0 <code>field[fieldName] == fieldTextValue[fieldName]</code>\u00a0is always true.  </p> <p>For the following sample, the platform returns true if the field's text value is equal to\u00a0ClassA.</p> <p><code>field[MyDocClass] == \"ClassA\"</code></p> <p>A field that has no field value set yet, is null. However, for checking if a field is empty, it is sufficient to check whether the field is empty by using the following condition.</p> <p><code>field[MyField] == \"\"</code></p> <p>The platform returns\u00a0true\u00a0when the field text value is empty or null. The same is valid for the typed and captured value check,\u00a0if\u00a0the field is of the type string. Comparing dates, booleans, or numbers to a string fails when you access the typed value.</p> <p>[!warning] For versions prior to Primus 3.0.2, the field check behaves differently. It first checks the condition for the field's typed value and if this is not available it uses the field's text value for verifying the condition. In addition, to check whether a field is empty or not, you have to check whether a field is either empty or null. With version 3.0.2 and newer, it is sufficient to check whether the field is empty.  </p> <p>As a result, you may need to change the conditions for a process created with an earlier version to ensure that you have the same results for your routes and activity filters with the newer platform version.</p> <p>Important\u00a0String comparisons are case insensitive:\u00a0<code>\"value\" == \"VALUE\"</code>\u00a0is\u00a0<code>true</code>. For case sensitive comparisons, use 3 equal signs:\u00a0<code>\"value\" === \"Value\"</code>\u00a0is\u00a0<code>false</code>.</p>"},{"location":"Field%20Evaluation%20Methods/#field-text-value","title":"Field text value","text":"<p>Evaluates the text value of a field. We recommend to use the field text value check only for string fields and to evaluate whether the text value has a certain value or not and if you are sure which content the field can have.</p> <p><code>field[MyDocClass] == \"ClassA\"</code></p>"},{"location":"Field%20Evaluation%20Methods/#field-typed-value","title":"Field typed value","text":"<p>Evaluates the typed value of a field. Use this method especially for non-string field, especially for numerical, date, and Boolean fields. There are 2 ways how you can access the typed value:</p> <p><code>fieldTypedValue[amount] &lt; 200.00 [amount] &lt; 200.00</code></p> <p>If the typed value is not set on a field, the expression fails to execute and evaluates to false.</p> <p>[!important]  The platform comprises a breaking change with Primus version 3.1 where the typed value comparison fails if the field types do not match. In previous versions, comparing\u00a0<code>50 == \"5\"</code>\u00a0evaluated to\u00a0true. Now, this comparison evaluates\u00a0false. Therefore, you have to be careful using conditions such as\u00a0<code>[amount] &lt; field[otherAmount]</code>\u00a0or\u00a0<code>[amount] &lt; \"50\"</code>.</p>"},{"location":"Field%20Evaluation%20Methods/#field-captured-value","title":"Field captured value","text":"<p>Evaluates the captured value of a field. The captured value is a string value that contains the field's original value extracted from the document. The sample evaluation below returns\u00a0true, if the classification result is not \u201cInvoice\u201d.</p> <p><code>fieldCapturedValue[DocClass] != \"Invoice\"</code></p>"},{"location":"Field%20Evaluation%20Methods/#field-regular-expression-match","title":"Field regular expression match","text":"<p>Checks whether the value of a specified field matches a regular expression, a 1 to 5-digit number.</p> <p><code>field[MyTestField] Matches \"(\\d){1,5}\"</code></p>"},{"location":"Field%20Evaluation%20Methods/#field-exists","title":"Field exists","text":"<p>Checks whether a specified field exists in the document independent from its value. If a document type is assigned that does not contain the field or no document type is assigned, the evaluation returns false.</p> <p><code>fieldExists[MyTestField]</code></p>"},{"location":"Field%20Evaluation%20Methods/#field-starts-with","title":"Field starts with","text":"<p>Checks whether the value of a specified field starts with the specified path data and then returns true.</p> <p><code>field[ImportSource] StartsWith \"C:\\Images\"</code></p>"},{"location":"Field%20Evaluation%20Methods/#field-ends-with","title":"Field ends with","text":"<p>Checks whether the value of a specified field ends with the configured image file extension and then returns true.</p> <p><code>field[ImportSource] EndsWith \"jpg\"</code></p>"},{"location":"Field%20Evaluation%20Methods/#field-value-contains","title":"Field value contains","text":"<p>Checks whether the value of a specified field contains the specified image path and then returns true.</p> <p><code>field[ImportSource] Contains \"\\Images\\Tif\"</code></p>"},{"location":"Field%20Evaluation%20Methods/#boolean-field-is-true-check","title":"Boolean field is true check","text":"<p>Checks whether a Boolean field is\u00a0true, based first on the typed value, then on the text value. If the typed value exists and is true, the evaluation returns true. If the typed value is false, the result is false. If the typed value does not exist and the text value is \"true\", it returns true. If the text value is \"somethingElse\", it returns false. If the field is not a Boolean field, the result is false.</p> <p><code>isBoolFieldTrue[myBoolField]</code></p>"},{"location":"Field%20Evaluation%20Methods/#boolean-field-is-false-check","title":"Boolean field is false check","text":"<p>Checks whether a Boolean field is\u00a0false, based first on the typed value, then on the text value. If the typed value exists and is true, the evaluation returns false. If the typed value is false, the result is true. If the typed value does not exist and the text value is \"false\", it returns true. If the text value is \"somethingElse\", it returns false. If the field is not a Boolean field, the result is false. <code>isBoolFieldTrue</code> and <code>isBoolFieldFalse</code> need to both exist, because the evaluation of a field that has the value xx is neither true nor false.</p> <p><code>isBoolFieldFalse[myBoolField]</code></p>"},{"location":"Field%20Evaluation%20Methods/#date-check","title":"Date check","text":"<p>Allows you to evaluate date and date/time values for a field or custom value. For the date check, you can set the date value in two different ways. Either by passing the date literal or by multiple numbers as parameters. The evaluation returns true if the date for the field, myDueDate, is January 1st, 2022.</p> <pre><code>`fieldTypedValue[myDueDate] == date('2022-01-01') fieldTypedValue[myDueDate] == date('2022-01-01T11:50:13') fieldTypedValue[myDueDate] == dateTime('2022-01-01T11:50:13')`\n</code></pre> <p>Initializing the date with the date literal works if a date or date/time string is formatted as the ISO 8601 date format. Note that not all formats defined in ISO 8601 are supported. For initializing the date without the time component, you can use the string in one of the following formats:\u00a0<code>yyyy-MM-dd</code>\u00a0or\u00a0<code>yyyyMMdd</code>.</p> <p>For initializing the date-time to the allowed date formats, you append one of the following formats:\u00a0<code>THH:mm:ss</code>,\u00a0<code>HH:mm:ss</code>,\u00a0<code>THHmmss</code>, or\u00a0<code>HHmmss</code>. Note that the platform initializes a date with a string that is not following the allowed formats, the min DateTime is\u00a0<code>01.01.0001 00:00:00</code>.</p> <p>Important</p> <p>For dates, the platform expects that date and date/time fields have the value in the UTC format. The reason for that is that you can handle from one multiple runtimes with different time-zones or even have the design-time and runtime on individual machines with different time zones. Also, every date/time aspect of the platform is handled in UTC so that using local times is not useful.</p> <p>Alternatively to configuring the date literal in brackets, you can specify the date parts. To initialize the date, you can use date[year, month, day]. The platform returns true if the field, myDueDate, is equal to December, 20th 2021.</p> <p><code>fieldTypedValue[myDueDate] == date[2021, 12, 20] fieldTypedValue[myDueDate] == dateTime(2022, 1, 1, 11, 50, 13)</code></p> <p>If you want to initialize the date-time, you have to specify all the date-time components up to seconds: date[year, month, day, hour, minute, second].</p> <p>Important</p> <p>Specifying an invalid number of parameters or parameters that are out of the allowed range, the expression initializes with the min date and evaluation may return unexpected results.</p> <p>You can compare date and date/time objects. In this case, the date/time object's day is taken for the comparison.</p> Comparison example<pre><code>    myDate = '2022-05-10',  \n    myDateTime = '2022-05-10 15:30:21',  \n    myDateTime2 = '2022-05-10 15:30:20'  \n    [myDate] &lt; [myDateTime] // false  \n    [myDate] &lt;= [myDateTime] // true  \n    [myDate] &gt;= [myDateTime] // true  \n    [myDateTime2] == [myDateTime] // false\n</code></pre> <p>The platform also supports arithmetic on date and time values, by using a time span. Time spans are created by using either days, hours, minutes, or seconds, giving the amount in parenthesis, for example, minutes(5). You can use multiple time spans in the same condition.</p> <p><code>// myDate = '2020-05-10', myDateTime = '2020-05-10 15:30:21' [myDate] &lt; today() - days(50) // true (in march 2022) [myDate] &lt; today() - days(5000) // false (in march 2022) [myDateTime] &lt; now() + hours(5) // true if now() is '2020-05-10 10:30:22' or later today() == now() // true today() == now() + days(1) + hours(5) + minutes(10) - seconds(5000) // false</code></p> <p>Related topics : [[Custom Value Evaluation Methods]]</p>"},{"location":"Timer%20Settings/","title":"Timer Settings","text":"<p>A time-driven activity's timer can be configured in five different modes: starts with host, continuous, daily, weekly, or monthly.</p> Example <p>An activity set to \"weekly\" will have its timer tick on the selected day every week and will execute at the same time every N weeks.</p> <p>Timer settings can be adjusted in the following ways: - Set the timer mode - Set the base start date/time - Set the base date/time timezone - Set the reoccuring time interval  </p> <p>By default, the base time/date field is the selected timezone. Note that this is independent of daylight saving time in your location.</p> <p>For the timer settings of a time-driven activity or agent, you can specify the timer mode, define the base date/time when to start, the time zone for the base date/time and the reoccurring time interval. The value for Base time/date field depends on the selected time zone that means that the time is the local time of this time zone.</p> <p>By default, when you add a new time-driven activity or agent, the time mode is set to \u201ccontinuous\u201d, the base date/time is set to the current time and date and the time zone is set to \u201cLocal Server Time\u201d. To change the default timer mode value, select the Process tab and in the Timer settings area change the timer mode by selecting one of the following modes:</p>"},{"location":"Timer%20Settings/#starts-with-host","title":"Starts with host","text":"<p>Select this option to start the activity when the host is started and repeat the processing after a specified number of seconds, minutes or hours. If wanted, you can configure repeatability for restarting the activity after a certain number of seconds, minutes or hours. Enter a numerical value or use the UP and DOWN ARROW to set the value and select the unit, seconds, minutes or hours, from the drop-down list. Select \u201cNever\u201d from the drop-down list, in case you want to start the activity only once. By default, the recurrence is set to 1 minute.</p>"},{"location":"Timer%20Settings/#continuous","title":"Continuous","text":"<p>Select this mode to set a point of time on a specified day to start the activity. To set the date and time when to start the activity, click the calendar button for Base Date/Time and select a date. After the date is selected, the full hours of the day are listed to be selected. After a full hour is selected, you can change the current time by selecting the minutes that are available as 5 minutes intervals. The final date and time is then displayed in the Base Date/Time field.</p> <p>If needed, change the time zone that is set to \u201cLocal Server Time\u201d by default. You can configure repeatability for restarting the activity after a certain number of seconds, minutes or hours. Enter a numerical value or use the UP and DOWN ARROW to set the value and select the unit, seconds, minutes or hours, from the drop-down list. Select \u201cNever\u201d from the drop-down list, in case you want to start the activity only once. By default, the recurrence is set to 1 minute.</p>"},{"location":"Timer%20Settings/#daily","title":"Daily","text":"<p>Select this mode to start a time-driven activity on a daily basis. To set the date and time when to start the activity, click the calendar button for Base Date/Time and select a date. After the date is selected, the full hours of the day are listed to be selected. After the full hour is selected, you can change the current time by selecting the minutes that are available as 5 minutes intervals. The final date and time is then displayed in the Base Date/Time field.</p> <p>If needed, change the time zone that is set to \u201cLocal Server Time\u201d by default. You can configure repeatability for restarting the activity, for example, every day or every third day. Enter a numerical value or use the UP and DOWN ARROW to set the value. Select \u201c0\u201d, in case you want to start the activity only once for the specified date and time.</p>"},{"location":"Timer%20Settings/#weekly","title":"Weekly","text":"<p>Select this mode to start the activity on a weekly basis. To set the date and time when to start the activity, click the calendar button for Base Date/Time and select a date. After the date is selected, the full hours of the day are listed to be selected. After the full hour is selected, you can change the current time by selecting the minutes that are available as 5 minutes intervals. The final date and time is then displayed in the Base Date/Time field.</p> <p>If needed, change the time zone that is set to \u201cLocal Server Time\u201d by default. You can configure repeatability for restarting the activity, for example, every week or on Tuesdays every third week. Enter a numerical value or use the UP and DOWN ARROW to set the value after how many weeks the activity is restarted. Select \u201c0\u201d for the week, in case you want to start the activity only once for the specified date and time. To specify a certain day within the week to restart the activity as wanted, click Days to run and select the weekdays.</p>"},{"location":"Timer%20Settings/#monthly","title":"Monthly","text":"<p>Select this mode to start a time-driven activity on a monthly basis. To set the date and time when to start the activity, click the calendar button for Base Date/Time and select a date. After the date is selected, the full hours of the day are listed to be selected. After the full hour is selected, you can change the current time by selecting the minutes that are available as 5 minutes intervals. The final date and time is then displayed in the Base Date/Time field.</p> <p>If needed, change the time zone that is set to \u201cLocal Server Time\u201d by default. You can configure repeatability for restarting the activity, for example, on February, 2nd every year or on the third Tuesday every month. To specify a certain day of a month, select Day from the Mode drop-down list, then select the month from the Month to run drop-down list and finally, the date within a month. Note that the Days to run drop-down list may list more days then the selected month provides. Please ensure that the day selected for the Days to run drop-down list is available for the month selected for the Month to run drop-down list, otherwise the activity is not restarted.</p> <p>The selected month and days are listed above the drop-down list and provide a Delete button. To remove the selection for a month or day, click the Delete button or click the DOWN ARROW for the drop-down list to clear the selection for the corresponding month, respectively, day.  </p> <p>Important</p> <p>Restarting the activity host does neither change the reoccurring interval nor runs the activity again for the same day. For instance, configuring to run every 2nd week and restarting the [[Activity Host|activity host]] in the second will will not change the execution behaviour.</p>"},{"location":"newActivity/","title":"DocProStar: Create a new activity","text":"<p>DocProStar-SDK</p> <p>This repository provides some help and sample code for using the DocProStar SDK. If you have any questions, pleaes contact the product or development department of TCG Informatik AG.</p> <p>Process your root document</p> C#Java scriptPhytonCobol C# Process your root document<pre><code>public override void ProcessDocument(DtoWorkItemData workItemInProgress,\n                                    STGDocument documentToProcess)\n{\n    foreach(var fields in documentToProcess.Fields)\n    {\n        foreach (var f in documentToProcess.IndexFields)\n        {\n            f.FieldValue.Set(true); // # (1)  \n        } \n    }\n}\n</code></pre> C# Process your root document<pre><code>function reverseString(str) {\n\n    // empty string\n    let newString = \"\";\n    for (let i = str.length - 1; i &gt;= 0; i--) {\n        newString += str[i];\n    }\n    return newString;\n} \n</code></pre> C# Process your root document<pre><code>    import pandas as pd\n    # Read data from a CSV file\n    data = pd.read_csv('data.csv')\n\n    # Perform basic analysis\n    mean = data['column_name'].mean()\n    print(f\"Mean: {mean}\")\n</code></pre> C# Process your root document<pre><code>    *&gt; setup the identification division\n    IDENTIFICATION DIVISION.\n    *&gt; setup the program id\n    PROGRAM-ID. HELLO.\n    *&gt; setup the procedure division (like 'main' function)\n    PROCEDURE DIVISION.\n      *&gt; print a string\n      DISPLAY 'WILLKOMMEN'.\n    *&gt; end our program\n    STOP RUN.\n</code></pre> <p>ActivityDebugger</p> <p>Contains C# project, which allows you to start a windows forms application, this will allow you to debug your activity, without attaching to any service.</p> <p>ActivityPackagingTool</p> <p>Contains a tool, which allows you to create stgpack out of your compiled assemblies. The stgpack can then be registered in the Process Modeler to be used like any other activtiy.</p> <p>SampleActivities</p> <p>This folder contains two simple activities, both with same functionality from code point of view. The NativeSampleActivity does not have any DPS references, but only Primus (STG) references. The DocProStarSampleActivity gives you some additional goodies, like \"Continue On Error\" or specific file logging.</p> <p>CustomMarketPlugIn (Custom Validation Rules)</p> <p>This folder contains a step-by-step introduction how to implement custom validation rules and a c# sample project of a Market Plug-In project.</p> <p>CustomLookupPlugIn (Data mapping)</p> <p>This folder contains a step-by-step introduction how to implement custom validation rules and a c# sample project of a Lookup Plug-In project.</p> <p>REST API</p> <p>This folder contains a step-by-step introduction how to user REST calls to upload documents into the DPS platform.</p>"}]}